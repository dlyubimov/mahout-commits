#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\begin_preamble
\renewcommand{\thefootnote}{\fnsymbol{footnote}}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman lmodern
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
MAHOUT-817
\begin_inset Newline newline
\end_inset

PCA options for SSVD
\begin_inset Newline newline
\end_inset

working notes
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Dmitriy Lyubimov, dlyubimov@apache.org
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Section
Approach
\end_layout

\begin_layout Subsection
Outline: mean of rows
\end_layout

\begin_layout Standard
We approach general PCA and dimensionality reduction problem with respect
 two input expressed as Mahout's distributed row matrix format.
 We also assume data points are row vectors in such a matrix.
 We denote such 
\begin_inset Formula $m\times n$
\end_inset

 input matrix as 
\begin_inset Formula $\tilde{\mathbf{A}}$
\end_inset


\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Here and on I use tilde notation to denote something that hasn't yet been
 adjusted for the effects of mean subtraction.
\end_layout

\end_inset

: 
\begin_inset Formula 
\[
\tilde{\mathbf{A}}=\left(\begin{matrix}\mathbf{a}_{1}^{\top}\\
\mathbf{a}_{2}^{\top}\\
\vdots\\
\mathbf{a}_{m}^{\top}
\end{matrix}\right)
\]

\end_inset


\end_layout

\begin_layout Standard
Mean of rows is n-vector 
\begin_inset Formula 
\begin{eqnarray*}
\mathbf{\boldsymbol{\xi}} & = & \left(\begin{matrix}\xi_{1}\\
\xi_{2}\\
\vdots\\
\xi_{n}
\end{matrix}\right)\\
 & = & \frac{1}{m}\sum_{i}^{m}\mathbf{a}_{i}.
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
We denote 
\begin_inset Formula $m\times n$
\end_inset

 mean matrix as 
\begin_inset Formula 
\[
\boldsymbol{\Xi}=\left(\begin{matrix}\mathbf{\boldsymbol{\xi}}^{\top}\\
\mathbf{\boldsymbol{\xi}}^{\top}\\
\vdots\\
\mathbf{\boldsymbol{\xi}}^{\top}
\end{matrix}\right)\in\mathbb{R}^{m\times n}
\]

\end_inset


\end_layout

\begin_layout Standard
Traditional approach under these settings is to find a mean of all rows
 and subtract it from all data points (row vectors) of the input
\begin_inset Formula 
\[
\mathbf{A}=\tilde{\mathbf{A}}-\boldsymbol{\Xi}
\]

\end_inset

 and then run reduced 
\begin_inset Formula $k$
\end_inset

-rank SVD: 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\mathbf{A}=\mathbf{U}\boldsymbol{\Sigma}\mathbf{V}^{\top}.
\]

\end_inset


\end_layout

\begin_layout Standard
At this point rows of 
\begin_inset Formula $\mathbf{U}$
\end_inset

 correspond to original data points (rows of 
\begin_inset Formula $\tilde{\mathbf{A}}$
\end_inset

) converted to PCA space (and we are done).
\end_layout

\begin_layout Subsection
Transformations to/from for new observation data points
\end_layout

\begin_layout Standard
Transformation of any new data point observation of
\begin_inset Formula $n$
\end_inset

-vector
\begin_inset Formula $\tilde{\mathbf{a}}$
\end_inset

 
\emph on
into
\emph default
 reduced dimentionality PCA space 
\begin_inset Formula $k$
\end_inset

-vector 
\begin_inset Formula $\mathbf{u}$
\end_inset

 will look like 
\begin_inset Formula 
\begin{equation}
\mathbf{\tilde{u}}=\boldsymbol{\Sigma^{-1}}\mathbf{V}^{\top}\left(\tilde{\mathbf{a}}-\boldsymbol{\xi}\right)\label{eq:toPca}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
(this operation is essentially an SVD fold-in operation corrected for the
 mean subtraction).
\end_layout

\begin_layout Standard
Inverse transformation (from reduced PCA space into original space) looks
 like 
\begin_inset Formula 
\begin{equation}
\tilde{\mathbf{a}}=\boldsymbol{\xi}+\mathbf{V}\boldsymbol{\Sigma}\tilde{\mathbf{u}}.\label{eq:frompca}
\end{equation}

\end_inset


\end_layout

\begin_layout Subsection
MAHOUT-817 goals: why brute force approach is hard in context of big data
 computations
\end_layout

\begin_layout Standard
In context of massive computations, input 
\begin_inset Formula $\tilde{\mathbf{A}}$
\end_inset

 is often rather sparse.
 Sparse matrices are packed and their subsequent operations within Mahout
 framework are optimized to account for degenerate nature of zero elements
 computation.
 Sometimes such reduction of need for flops and space may approach several
 orders of magnitude.
 However, mean subtraction step would turn such sparse inputs into a dense
 matrix 
\begin_inset Formula $\left(\tilde{\mathbf{A}}-\boldsymbol{\Xi}\right)$
\end_inset

.
 Such intermediate input will take a lot of space and subsequent SVD will
 require a lot of flops.
 Fortunately, this can be addressed in context of SSVD method in a way that
 will be (almost) cost-equivalent to a regular SSVD computation on original
 sparse input 
\begin_inset Formula $\tilde{\mathbf{A}}$
\end_inset

.
\end_layout

\begin_layout Standard
MAHOUT-817 addresses two goals:
\end_layout

\begin_layout Itemize
Provide column-wise mean computation step in the whole pipeline (or use
 outside mean vector if already available)
\end_layout

\begin_layout Itemize
Lift the dense matrix data concerns per above.
\end_layout

\begin_layout Standard
The sparser the original input is, the more efficiency gain is to be had
 by using SSVD PCA options compared to brute-force approach.
 
\end_layout

\begin_layout Standard
If original input is 100% dense, SSVD PCA options will have roughly the
 same cost as brute-force approach.
\end_layout

\begin_layout Section
Recap of SSVD flow.
\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Paragraph
Modified SSVD Algorithm.
\end_layout

\begin_layout Plain Layout
Given an 
\begin_inset Formula $m\times n$
\end_inset

 matrix 
\series bold
A
\series default
, a target rank 
\begin_inset Formula $k\in\mathbb{N}_{1}$
\end_inset

, an oversampling parameter 
\begin_inset Formula $p\in\mathbb{N}_{1}$
\end_inset

, and the number of additional power iterations 
\begin_inset Formula $q\in\mathbb{N}_{0}$
\end_inset

, this procedure computes an 
\begin_inset Formula $m\times\left(k+p\right)$
\end_inset

 SVD 
\begin_inset Formula $\mathbf{A=U}\boldsymbol{\Sigma}\mathbf{V}^{\top}$
\end_inset

(some notations are adjusted):
\end_layout

\begin_layout Enumerate
Create seed for random 
\begin_inset Formula $n\times\left(k+p\right)$
\end_inset

 matrix 
\begin_inset Formula $\boldsymbol{\Omega}$
\end_inset

.
 The seed defines matrix 
\begin_inset Formula $\mathbf{\Omega}$
\end_inset

 using Gaussian unit vectors per one of suggestions in 
\begin_inset CommandInset citation
LatexCommand cite
key "Martinsson"

\end_inset

.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\mathbf{Y=A\boldsymbol{\Omega}},\,\mathbf{Y}\in\mathbb{R}^{m\times\left(k+p\right)}$
\end_inset

.
\end_layout

\begin_layout Enumerate
Column-orthonormalize 
\begin_inset Formula $\mathbf{Y}\rightarrow\mathbf{Q}$
\end_inset

 by computing thin decomposition 
\begin_inset Formula $\mathbf{Y}=\mathbf{Q}\mathbf{R}$
\end_inset

.
 Also, 
\begin_inset Formula $\mathbf{Q}\in\mathbb{R}^{m\times\left(k+p\right)},\,\mathbf{R}\in\mathbb{R}^{\left(k+p\right)\times\left(k+p\right)}$
\end_inset

.
 I denote this as 
\begin_inset Formula $\mathbf{Q}=\mbox{qr}\left(\mathbf{Y}\right).\mathbf{Q}$
\end_inset

.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\mathbf{B}_{0}=\mathbf{Q}^{\top}\mathbf{A}:\,\,\mathbf{B}\in\mathbb{R}^{\left(k+p\right)\times n}$
\end_inset

.
 (Another way is 
\begin_inset Formula $\mathbf{R}^{-1}\mathbf{Y}^{\top}\mathbf{A}$
\end_inset

, depending on whether we beleive if size of A less than size of Q).
\end_layout

\begin_layout Enumerate
If 
\begin_inset Formula $q>0$
\end_inset

 repeat: for 
\begin_inset Formula $i=1..q$
\end_inset

: 
\begin_inset Formula $\mathbf{B}_{i}^{\top}=\mathbf{A}^{\top}\mbox{qr}\left(\mathbf{A}\mathbf{B}_{i-1}^{\top}\right).\mathbf{Q}$
\end_inset

 (power iterations step)
\end_layout

\begin_layout Enumerate
Compute Eigensolution of a small Hermitian 
\begin_inset Formula $\mathbf{B}_{q}\mathbf{B}_{q}^{\top}=\mathbf{\hat{U}}\boldsymbol{\Lambda}\mathbf{\hat{U}}^{\top}$
\end_inset

.
 
\begin_inset Formula $\mathbf{B}_{q}\mathbf{B}_{q}^{\top}\in\mathbb{R}^{\left(k+p\right)\times\left(k+p\right)}$
\end_inset

.
\end_layout

\begin_layout Enumerate
Singular values 
\begin_inset Formula $\mathbf{\boldsymbol{\Sigma}}=\boldsymbol{\Lambda}^{0.5}$
\end_inset

, or, in other words, 
\begin_inset Formula $s_{i}=\sqrt{\sigma_{i}}$
\end_inset

.
\end_layout

\begin_layout Enumerate
If needed, compute 
\begin_inset Formula $\mathbf{U}=\mathbf{Q}\hat{\mathbf{U}}$
\end_inset

.
\end_layout

\begin_layout Enumerate
If needed, compute 
\begin_inset Formula $\mathbf{V}=\mathbf{B}_{q}^{\top}\hat{\mathbf{U}}\boldsymbol{\Sigma}^{-1}$
\end_inset

.
 Another way is 
\begin_inset Formula $\mathbf{V}=\mathbf{A}^{\top}\mathbf{U}\boldsymbol{\Sigma}^{-1}$
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Section
\begin_inset Formula $\mathbf{B}_{0}$
\end_inset

 pipeline mods
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $\mathbf{A}$
\end_inset

 be 
\begin_inset Formula $\tilde{\mathbf{A}}$
\end_inset

 with the mean subtracted.
\begin_inset Formula 
\[
\mathbf{A}=\tilde{\mathbf{A}}-\boldsymbol{\Xi}=\left(\begin{matrix}\mathbf{a_{1}}-\mathbf{\boldsymbol{\xi}}\\
\mathbf{a_{2}}-\mathbf{\boldsymbol{\xi}}\\
\vdots\\
\mathbf{a}_{m}-\mathbf{\boldsymbol{\xi}}
\end{matrix}\right).
\]

\end_inset


\end_layout

\begin_layout Paragraph
Fixing Y.
\end_layout

\begin_layout Standard
\begin_inset Formula $\mathbf{B}_{0}$
\end_inset

 pipeline starts with notion that since 
\begin_inset Formula $\mathbf{A}$
\end_inset

 is dense, its actual formation and mutliplications are very expensive.
 Hence, we factorize 
\begin_inset Formula $\mathbf{Y}$
\end_inset

 as 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
\mathbf{Y} & = & \mathbf{A}\boldsymbol{\Omega}\\
 & = & \tilde{\mathbf{A}}\boldsymbol{\Omega}-\Xi\boldsymbol{\Omega}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
Current 
\begin_inset Formula $\mathbf{B}_{0}$
\end_inset

 pipeline already takes care of 
\begin_inset Formula $\tilde{\mathbf{A}}\boldsymbol{\Omega}$
\end_inset

, but the term 
\begin_inset Formula $\boldsymbol{\Xi}\boldsymbol{\Omega}$
\end_inset

 will need more work.
 
\end_layout

\begin_layout Standard
The term 
\begin_inset Formula $\Xi\boldsymbol{\Omega}$
\end_inset

 will have identical rows 
\begin_inset Formula 
\[
\mathbf{s}_{\Omega}=\mathbf{\boldsymbol{\Omega}}^{\top}\boldsymbol{\xi}.
\]

\end_inset

 so we need to precompute just one dense 
\begin_inset Formula $\left(k+p\right)$
\end_inset

-vector 
\begin_inset Formula $\mathbf{\boldsymbol{\Omega}}^{\top}\boldsymbol{\xi}$
\end_inset

 before we enter Q-job.
 This computation 
\emph on
may 
\emph default
turn out fairly expensive since matrix 
\begin_inset Formula $\Omega$
\end_inset

 is dense (potentially several orders of magnitude bigger than input 
\begin_inset Formula $\tilde{\mathbf{A}}$
\end_inset

) and the median 
\begin_inset Formula $\boldsymbol{\xi}$
\end_inset

 is dense as well, even that we don't actually have to materialize any of
 
\begin_inset Formula $\Omega$
\end_inset

.
\emph on

\begin_inset Foot
status collapsed

\begin_layout Plain Layout

\emph on
Question is whether we could just ignore it since 
\begin_inset Formula $\mathbb{E}\left(\mathbf{\boldsymbol{\Omega}}^{\top}\boldsymbol{\xi}.\right)=0$
\end_inset


\emph default
.
 This question is more or less answered, it looks the answer is no, we should
 not be ignoring this product by default.
 
\end_layout

\begin_layout Plain Layout
One question for experimentation is whether it is worth to create a separate
 distributed job for this.
 its 
\begin_inset Formula $n\times k$
\end_inset

 iterations.
 maybe it is not, assuming 
\begin_inset Formula $n\approx10^{7}$
\end_inset

 and 
\begin_inset Formula $k\approx10^{2}$
\end_inset

.
 it would also require artificial map splits for this since there's no input
 for 
\begin_inset Formula $\boldsymbol{\Omega}$
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Formally, fixing rows of Y will therefore look like 
\begin_inset Formula 
\begin{equation}
\mathbf{Y}_{l,*}=\left(\tilde{\mathbf{A}}\boldsymbol{\Omega}\right)_{l,*}-\mathbf{s}_{\Omega}.\label{eq:fix-Y}
\end{equation}

\end_inset


\end_layout

\begin_layout Paragraph
Fixing 
\begin_inset Formula $\mathbf{B}$
\end_inset

.
\end_layout

\begin_layout Standard
Here and on we assume 
\begin_inset Formula $\mathbf{B}\equiv\mathbf{B}_{0}$
\end_inset

 and omit the index for compactness.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
\mathbf{B} & = & \mathbf{Q}^{\top}\mathbf{A}\\
 & = & \mathbf{Q}^{\top}\tilde{\mathbf{A}}-\mathbf{Q}^{\top}\boldsymbol{\Xi}.\label{eq:B-decomp}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
Again, current pipeline takes care of 
\begin_inset Formula $\mathbf{Q}^{\top}\mathbf{\tilde{A}}$
\end_inset

 but product 
\begin_inset Formula $\mathbf{Q}^{\top}\Xi$
\end_inset

 would need more work.
 
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $\mathbf{W}=\mathbf{Q}^{\top}\boldsymbol{\Xi}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
\mathbf{W} & = & \sum^{m}\mathbf{Q}_{i,*}\boldsymbol{\Xi}_{i,*}^{\top}\\
 & = & \mathbf{s}_{Q}\boldsymbol{\xi}^{\top}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula 
\begin{equation}
\mathbf{s}_{Q}=\sum_{i=1}^{m}\mathbf{Q}_{i,*}\label{eq:sq}
\end{equation}

\end_inset

 is sum of all rows of 
\series bold
Q
\series default
.
 
\end_layout

\begin_layout Standard
Since 
\begin_inset Formula $B_{0}$
\end_inset

 pipeline computes 
\begin_inset Formula $\mathbf{Q}^{\top}\tilde{\mathbf{A}}$
\end_inset

 column-wise over columns of 
\series bold
Q
\series default
 and 
\begin_inset Formula $\tilde{\mathbf{A}}$
\end_inset

, the first thought is that 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:B-decomp"

\end_inset

 can be computed column-wise as well with computation seeded by the 
\begin_inset Formula $\mathbf{s}_{Q}$
\end_inset

 and 
\begin_inset Formula $\boldsymbol{\xi}$
\end_inset

 vectors.
\end_layout

\begin_layout Standard
One problem with our first thought is that the 
\begin_inset Formula $\mathbf{s}_{Q}$
\end_inset

 term is not yet known at the time of formation of 
\begin_inset Formula $\mathbf{B}$
\end_inset

 columns because formation of final 
\begin_inset Formula $\mathbf{Q}$
\end_inset

 blocks happens in the same distributed map task that produces initial 
\series bold

\begin_inset Formula $\mathbf{Q}^{\top}\mathbf{A}$
\end_inset

  
\series default
blocks.
 Hence, the sum of Q rows at that moment would not be available.
 But we probably can fix our output later at the time when 
\begin_inset Formula $\mathbf{s}_{Q}$
\end_inset

 would already have been known.
\end_layout

\begin_layout Standard
Hence, we won't actually ever form 
\begin_inset Formula $\mathbf{B}$
\end_inset

 in this pipeline.
 Instead, we will produce 
\begin_inset Formula $\tilde{\mathbf{B}}=\mathbf{Q}^{\top}\mathbf{\tilde{A}}$
\end_inset

 and vector 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:sq"

\end_inset

 and provide a way to produce columns of 
\begin_inset Formula $\mathbf{B}$
\end_inset

 on the fly given columns of 
\begin_inset Formula $\tilde{\mathbf{B}}$
\end_inset

 and 
\begin_inset Formula $\mathbf{s}_{Q}$
\end_inset

 in the future jobs.
\end_layout

\begin_layout Standard
Let denote 
\emph on
columns
\emph default
 
\begin_inset Formula $\mathbf{b}_{i}=\mathbf{B}_{*,i}$
\end_inset

, and 
\begin_inset Formula $\tilde{\mathbf{b}}_{i}=\tilde{\mathbf{B}}_{*,i}$
\end_inset

.
 Then correction for 
\series bold

\begin_inset Formula $\mathbf{B}$
\end_inset

 
\series default
columns will look like 
\begin_inset Formula 
\begin{equation}
\mathbf{b}_{i}=\tilde{\mathbf{b}}_{i}-\xi_{i}\mathbf{s}_{Q}.\label{eq:B-corr}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Getting a little ahead, we will use 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:B-corr"

\end_inset

 to fix columns of B in V-job and ABt-job.
 Those two jobs are the primary customers of this equation.
\end_layout

\begin_layout Paragraph
Fixing 
\begin_inset Formula $\mathbf{BB}^{\top}$
\end_inset

 on the fly (in front end).
\end_layout

\begin_layout Standard
Moving on to 
\begin_inset Formula $\mathbf{BB}^{\top}$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
\mathbf{BB}^{\top} & = & \sum_{i}^{n}\mathbf{b}_{i}\mathbf{b}_{i}^{\top}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
\mathbf{b}_{i}\mathbf{b}_{i}^{\top} & = & \left(\tilde{\mathbf{b}}_{i}-\mathbf{\xi_{i}\mathbf{s}_{Q}}\right)\left(\tilde{\mathbf{b}}_{i}-\xi_{i}\mathbf{s}_{Q}\right)^{\top}\\
 & = & \tilde{\mathbf{b}}_{i}\tilde{\mathbf{b}}_{i}^{\top}-\xi_{i}\tilde{\mathbf{b}}_{i}\mathbf{\mathbf{s}}_{Q}^{\top}-\mathbf{\xi_{i}\mathbf{s}}_{Q}\tilde{\mathbf{b}}_{i}^{\top}-\mathbf{\xi_{i}^{2}}\mathbf{s}_{Q}\mathbf{s}_{Q}^{\top}\\
 & = & \tilde{\mathbf{b}}_{i}\tilde{\mathbf{b}}_{i}^{\top}-\left[\xi_{i}\tilde{\mathbf{b}}_{i}\mathbf{s}_{Q}^{\top}+\left(\xi_{i}\tilde{\mathbf{b}}_{i}\mathbf{s}_{Q}^{\top}\right)^{\top}\right]+\mathbf{\xi_{i}^{2}}\mathbf{s}_{Q}\mathbf{s}_{Q}^{\top}.
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
Let's denote 
\begin_inset Formula $\left(k+p\right)\times\left(k+p\right)$
\end_inset

 matrix 
\begin_inset Formula $\mathbf{C}=\left[\sum_{i}^{n}\xi_{i}\tilde{\mathbf{b}}_{i}\right]\mathbf{s}_{Q}^{\top}$
\end_inset

.
 Taking sum,
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
\mathbf{BB}^{\top} & = & \tilde{\mathbf{B}}\tilde{\mathbf{B}}^{\top}-\\
 & - & \left[\mathbf{C}+\mathbf{C}^{\top}\right]+\label{eq:Csum}\\
 & + & \|\boldsymbol{\xi}\|_{2}^{2}\mathbf{s}_{Q}\mathbf{s}_{Q}^{\top}.\label{eq:fix-BBt}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
Bt-job already produces 
\begin_inset Formula $\tilde{\mathbf{B}}\tilde{\mathbf{B}}^{\top}$
\end_inset

 partial products (1 per reducer) and front end finishes the summation.
 So no change here.
\end_layout

\begin_layout Standard
We also can add 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
the term 
\begin_inset Formula $\|\boldsymbol{\xi}\|_{2}^{2}\mathbf{s}_{Q}\mathbf{s}_{Q}^{\top}$
\end_inset

 in front end before we do eigendecomposition since it is a tiny matrix
 and at that point 
\begin_inset Formula $\mathbf{s}_{Q}$
\end_inset

 is already known.
 
\end_layout

\begin_layout Standard
Bt-job can also aggregate and collect vector 
\begin_inset Formula 
\begin{equation}
\mathbf{s}_{\tilde{B}}=\tilde{\mathbf{B}}\boldsymbol{\xi}=\sum_{i}^{n}\xi_{i}\mathbf{\tilde{b}}_{i}.\label{eq:sb}
\end{equation}

\end_inset

Then we also can produce 
\begin_inset Formula 
\begin{equation}
\mathbf{C}=\mathbf{s}_{\tilde{B}}\mathbf{s}_{Q}^{\top}
\end{equation}

\end_inset

in the front end as well.
\end_layout

\begin_layout Standard
Bottom line, Bt job needs to be augmented to produce 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:sq"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:sb"

\end_inset

 if PCA computation is desired.
\end_layout

\begin_layout Standard
PCA would be primarily interested in 
\begin_inset Formula $\mathbf{V}$
\end_inset

 or 
\begin_inset Formula $\mathbf{V}_{\sigma}$
\end_inset

 output of the decomposition in order to fold in new items back into PCA
 space, so we need to correct 
\series bold
V 
\series default
job as well in this case to fix output of Bt-job per 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:B-corr"

\end_inset

 which we must seed with 
\begin_inset Formula $\boldsymbol{\xi}$
\end_inset

 and 
\begin_inset Formula $\mathbf{s}_{Q}$
\end_inset

.
\end_layout

\begin_layout Section
Power Iterations (aka 
\begin_inset Formula $\mathbf{B}_{i}$
\end_inset

 pipeline) additions
\end_layout

\begin_layout Standard
Power iterations pipeline produces 
\begin_inset Formula $\mathbf{B}_{i}^{\top}=\mathbf{A}^{\top}\mbox{qr}\left(\mathbf{A}\mathbf{B}_{i-1}^{\top}\right).\mathbf{Q}$
\end_inset

.
 Here and on in power iteration-related sections I use index 
\begin_inset Formula $i$
\end_inset

 to denote the iteration number.
\end_layout

\begin_layout Standard
Here, we assume that 
\begin_inset Formula $\mathbf{s}_{Q,0}\equiv\mathbf{s}_{Q}$
\end_inset

, 
\begin_inset Formula $\mathbf{s}_{\tilde{B},0}\equiv\mathbf{s}_{\tilde{B}}$
\end_inset

 and 
\begin_inset Formula $\boldsymbol{\xi}$
\end_inset

 are known and are results of 
\begin_inset Formula $\mathbf{B}_{0}$
\end_inset

 pipeline above.
\end_layout

\begin_layout Standard
We also assume outer loop 
\begin_inset Formula $\forall i\in\left[1,q\right]$
\end_inset

 for all the following steps.
\end_layout

\begin_layout Subsection
Fixing 
\begin_inset Formula $\mathbf{B}_{i-1}$
\end_inset

.
 
\end_layout

\begin_layout Standard
First, the on-the fly correction for 
\begin_inset Formula $\mathbf{B}$
\end_inset

 columns must be applied per 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:B-corr"

\end_inset

 using 
\begin_inset Formula $\mathbf{s}_{Q,i-1}$
\end_inset

 produced by previous iteration or 
\begin_inset Formula $\mathbf{B}_{0}$
\end_inset

 iteration as at this point we would have access to 
\begin_inset Formula $\tilde{\mathbf{B}}_{i-1}$
\end_inset

 and 
\begin_inset Formula $\mathbf{s}_{Q,i-1}$
\end_inset

.
 So, the mapper of ABt-job must be preloaded with 
\begin_inset Formula $\left(k+p\right)$
\end_inset

-long 
\begin_inset Formula $\mathbf{s}_{Q,i-1}$
\end_inset

 vector known from previous iteration.
\end_layout

\begin_layout Subsection
Fixing 
\begin_inset Formula $\mathbf{Y}_{i}$
\end_inset

.
 
\end_layout

\begin_layout Standard
Next, we consider 
\begin_inset Formula 
\begin{eqnarray*}
\mathbf{Y}_{i} & = & \mathbf{A}\mathbf{B}_{i-1}^{\top}\\
 & = & \mathbf{\tilde{A}}\mathbf{B}_{i-1}^{\top}-\boldsymbol{\Xi}\mathbf{B}_{i-1}^{\top}.
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
Again, 
\begin_inset Formula $\mathbf{\Xi}\mathbf{B}_{i-1}^{\top}$
\end_inset

 term would have identical rows 
\begin_inset Formula $\mathbf{B}_{i-1}\boldsymbol{\xi}$
\end_inset

 but the problem is that it needs to be known before ABt job.
 But we alrady know it from the previous iteration as 
\begin_inset Formula $\mathbf{s}_{\tilde{B},i-1}.$
\end_inset

 The rows of 
\begin_inset Formula $\mathbf{Y}_{i}$
\end_inset

, 
\begin_inset Formula $l$
\end_inset

-th of which I denote as 
\begin_inset Formula $\left(\mathbf{Y}_{i}\right)_{l,*}$
\end_inset

, must be corrected per 
\begin_inset Formula 
\begin{equation}
\left(\mathbf{Y}_{i}\right)_{l,*}=\left(\mathbf{\tilde{A}B}_{i-1}^{\top}\right)_{l,*}-\mathbf{s}_{\tilde{B},i-1}.\label{eq:Y_i-corr}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
The row 
\begin_inset Formula $\left(\mathbf{\tilde{A}B}_{i-1}^{\top}\right)_{l,*}$
\end_inset

 is known at the time of the reducing of ABt-job.
 So reducers of ABt-job must be preloaded with 
\begin_inset Formula $\mathbf{s}_{\tilde{B},i-1}$
\end_inset

 
\begin_inset Formula $\left(k+p\right)$
\end_inset

-long vector in order to finish correction of 
\begin_inset Formula $\mathbf{Y}_{i}$
\end_inset

 rows before handing them off to first step of QR.
 So, practically no additional effort here.
 Notice similarity between 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Y_i-corr"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:fix-Y"

\end_inset

.
\end_layout

\begin_layout Subsection
Fixing 
\begin_inset Formula $\mathbf{B}_{i}$
\end_inset

.
\end_layout

\begin_layout Standard
Similarly to 
\begin_inset Formula $\mathbf{B}_{0}$
\end_inset

 pipeline, we don't produce 
\begin_inset Formula $\mathbf{B}_{i}$
\end_inset

 output directly in this iteration.
 Instead, we produce 
\begin_inset Formula $\tilde{\mathbf{B}}_{i}=\mathbf{Q}_{i}^{\top}\mathbf{\tilde{A}}$
\end_inset

 and 
\begin_inset Formula $\left(k+p\right)$
\end_inset

-long vector 
\begin_inset Formula $\mathbf{s}_{Q,i}$
\end_inset

 exactly per 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:sq"

\end_inset

.
 Nothing new here.
 (in fact, code producing 
\begin_inset Formula $\mathbf{s}_{Q}$
\end_inset

 and 
\begin_inset Formula $\mathbf{s}_{Q,i}$
\end_inset

 would be exactly the same and shares Bt job with 
\begin_inset Formula $\mathbf{B}_{0}$
\end_inset

 pipeline).
 Subsequent jobs will use 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:fix-BBt"

\end_inset

 to fix columns of B the same way as was discussed there.
\end_layout

\begin_layout Section
Fixing 
\begin_inset Formula $\mathbf{BB}^{\top}$
\end_inset

 and the rest of pipeline with power iterations.
\end_layout

\begin_layout Standard
In case 
\begin_inset Formula $q$
\end_inset

 power iterations are enabled, fixing 
\begin_inset Formula $\mathbf{BB}^{\top}$
\end_inset

steps and on run exactly as defined in 
\begin_inset Formula $\mathbf{B}_{0}$
\end_inset

 pipeline, except they must assume 
\begin_inset Formula $\mathbf{\tilde{B}}\equiv\tilde{\mathbf{B}}_{q}$
\end_inset

,
\begin_inset Formula $\mathbf{s}_{Q}\equiv\mathbf{s}_{Q,q}$
\end_inset

, 
\begin_inset Formula $\mathbf{s}_{\tilde{B}}\equiv\mathbf{s}_{\tilde{B},q}$
\end_inset

.
 
\end_layout

\begin_layout Section
R simulatcode
\end_layout

\begin_layout Standard
See Mahout-817.
\end_layout

\end_body
\end_document
